package work3;

import java.awt.BufferCapabilities;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

public class mainClass {

	public static void main(String[] args) {
		
		/*
			1. 파일생성
			2. 파일삭제
			3. 파일수정
			4. 파일읽기
			5. 파일추가수정
			6. 모두출력
			7. 종료
		
		*/
		
		
		
		// createFile("test");
		
			deleteFile("test");
		
		//	writeFile("test");
		
		//	appendWriteFile("test");
		
	}
	
	static File createFile(String filename) {
		
		File dirFile = new File("e:\\tmp"); // 경로지정
		String fileList[] = dirFile.list();
		boolean b = false;
		
		
		for (int i = 0; i < fileList.length; i++) {
			if(fileList[i].equals(filename + ".txt") == true) {
				b = true;
				break;
				
			}
		}
		if(b) {
			System.out.println("같은 이름의 파일이 존재합니다. 파일을 생성하지 못했습니다.");
			return null;
		}
		File newFile = new File("e:\\tmp\\" + filename + ".txt");
		
		try {
			if(newFile.createNewFile()) {
				System.out.println(filename +".txt 파일을 생성에 성공했습니다.");
			}else {
				System.out.println("파일을 생성에 실패했습니다.");
				return null;
			}
		} catch (IOException e) {
			System.out.println("예외가 발생했습니다.");
		}
		return newFile;
	}
	
	static void deleteFile(String filename) {
		File file = new File("e:\\tmp\\"); // 경로지정
		
		boolean b = file.exists(); // 파일이 있는지 유무를 true, false로 받는다  
		if(b == false) {
			System.out.println("삭제할 파일" + filename + ".txt 가 존재하지 않습니다.");
		}else {
			if(file.delete()) {
				System.out.println("파일" + filename + ".txt를 삭제했습니다.");
			} else {
				System.out.println("파일" + filename + ".txt를 삭제하지 못했습니다.");
			}
		}
		
	}
	
	static boolean writeFile(String filename) {
		Scanner sc = new Scanner(System.in);
		File file = new File("e:\\tmp\\" + filename + ".txt");
		boolean b = file.exists();
		
		if(b == false) {
			System.out.println(filename + "파일이 존재하지 않습니다.");
			return false;
		}else {
			System.out.print("이름 >> ");
			String name = sc.next();
			
			System.out.print("나이 >> ");
			int age = sc.nextInt();
			
			System.out.print("주소 >> ");
			String address = sc.next();
			
			String data = name + "-" + age + "-" + address; // split(String 함수 토큰을 매개체로 자르는 함수)
			
			PrintWriter pw;
			
			try {
				pw = new PrintWriter(new BufferedWriter(new FileWriter(file)));
				pw.println(data);
				pw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}			
			System.out.println(filename + ".txt 파일에 " + data + "를 작성하였습니다.");
			return true;
		}
		
		
		
		
		
		
	}
	
	static boolean appendWriteFile(String filename) {
		Scanner sc = new Scanner(System.in);
		File file = new File("e:\\tmp\\" + filename + ".txt");
		boolean b = file.exists();
		
		if(b == false) {
			System.out.println(filename + "파일이 존재하지 않습니다.");
			return false;
		}else {
			System.out.print("이름 >> ");
			String name = sc.next();
			
			System.out.print("나이 >> ");
			int age = sc.nextInt();
			
			System.out.print("주소 >> ");
			String address = sc.next();
			
			String data = name + "-" + age + "-" + address; // split(String 함수 토큰을 매개체로 자르는 함수)
			
			PrintWriter pw;
			
			try {
				pw = new PrintWriter(new BufferedWriter(new FileWriter(file, true)));
				pw.println(data);
				pw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}			
			System.out.println(filename + ".txt 파일에 " + data + "를 추가 작성하였습니다.");
			return true;
		}
		
		
		
		
		
		
	}
	
	
	
	
	
	
	
}






