list (목록)

Collection (수집)

배열 = 같은 자료형의 묶음
동적 int arr[] = new int[5];
처음에만 동적으로 잡아두고 잡아둔 이후 정적이다 (더이상 늘리지를 못함) 그렇기에 배열은 동적이라고 보기 보다는 정적으로 봐야한다.

배열을 50개로 만들어놔도 10개만 사용한다면 나머지 40개의 공간은 아무것도 쓰지않고 잡아두기만 하고있어서 비효율적이다.

1-4-6-8-9-n

4-6 사이에 5를 집어넣으려면 한칸씩 미뤄야한다 6자리에 5 8자리에 6...
만약 삭제를한다면 땡겨줘야한다.

4바이트 주소값만 다음 리스트로 넣어준다.


첫번째 리스트의 주소값이 null 을 받고 두번째 리스트의 주소는 첫번째 리스트가 된다. n 번째 리스트의 주소는 n-1 주소가 되고...

n번째 리스트가 삭제된다면 n+1번째 리스트에게 n번째 주소값을 가지게 한다.

만약 n과 n+1 사이에 새로운 리스트를 삽입한다면 n번째 주소를 새로운 리스트에 넣어주고 n+1 의 주소는 새로운 리스트 주소로 바꿔준다.

LIST 사용목적 정적이 아니라 동적활동을 목적으로 사용함

선형 형태는 전부다 List 이다.

선형(--------------------------------------)

hash map 은 트리 형태로 되어있다.