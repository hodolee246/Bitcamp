model1
Java bin = dao

model 에서 직접부른다.

model2
main 에서 view를 먼저 키는게 아니다.
main -> controller -> model -> database(데이터 베이스에서 데이터를가지고) -> model -> controller
-> view

View( 	login -> account  	)	최초에는 데이터가 없기에 db를 갈 이유가없다.
					main cont view
	     이 사이
		에는 컨트롤러가 제어를 해주고 있다.



view -> controller -> model -> db -> model -> controller -> view

최초에는 db에 데이터를 넣을 이유 or login 창에서 db에서 데이터를 찾을 이유(데이터가 없음) 그렇기에 바로
db를 거치지 않고 control 에서 바로 다른 뷰로 이동한다.

이것을 Spring 이라 한다. ( 필요할때에만 들어갔다 나온다.  )

		   login		       account
main -> controller -> view -> controller -> view
	   l		      l		
	   v		      v
	model		    model
	   l		      l		
	   v		      v
	  DB		      DB


where id = ?

Connection conn = null;
PreparedStatement psmt = null;
ResultSet rs = null;

boolean findId = false;
system.out,println("sql:" + sql);
try{
	conn = DBConnection.getConnection();
	psmt = conn.prepareStatemnet(sql);
	psmt.setString(1, id);	// index number 1부터 시작(오라클은 0이아니라 1부터시작함)

if(rs.next()){
	findid = true;
}

/*
	  	JButton btn = (JButton)e.getSourse();
	  	String btnTitle = btn.getLabel();
	  	
	  	MemberDao dao = MemberDao.getInstance();
	  	if(btnTitle.dqupals("id")){ // 버튼명
	  	if(idTextF.getText().equals("")){
	  		메세지박스(입력이 안되있습니다.)
	  		return;
	  	}
	  		boolean b = dao.getId(idtextf.gettext);
	  	}
	 */






view 에서 model 을 언제든지 호출할 수 있어야 하기에 model 은 싱글톤이어야 한다.

model 1의 장점 개발속도가 빠르다.	단점 유지보수가 힘들다.

model 2의 장점 유지보수가 좋다. (따로따로 관리를 해준다 controller, view, model == MVC(모델 뷰 컨트롤러)

 





